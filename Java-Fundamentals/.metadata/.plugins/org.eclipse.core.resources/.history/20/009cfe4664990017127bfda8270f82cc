package main.source;

public class Triangle extends Shape {
	private double base;
	private double height;
	private double hypo;
	
	public Triangle(double base, double height, double hypo) {
		this.base = base;
		this.height = height;
		this.hypo = hypo;
	}

	public double getBase() {
		return this.base;
	}
	
	public void setBase(double base) {
		if (base == Double.NaN ) {
			try {
				throw new Exception("base cannot be negative");
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		this.base = base;
	}

	public double getHeight() {
		return this.height;
	}
	
	public void setHeight(double height) {
		if (height < 0) {
			throw new IllegalArgumentException("height cannot be negative");
		}
		
		this.height = height;
	}

	public double getHypo() {
		return this.hypo;
	}
	
	public void setHypo(double hypo) {
		if (hypo < 0) {
			throw new IllegalArgumentException("hypo cannot be negative");
		}
		
		this.hypo = hypo;
	}
	
	@Override
	public double getArea() {
		double area = 0.5 * (this.base * this.hypo);
		return area;
	}

	@Override
	public double getPerimeter() {
		double perimeter = this.base + this.height + this.hypo;
		return perimeter;
	}
}
