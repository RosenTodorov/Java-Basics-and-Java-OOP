<?xml version="1.0" encoding="UTF-8"?><testrun name="CircleTest" project="ShapeAreaAndPerimeterClasses" tests="11" started="0" failures="0" errors="2" ignored="0">
  <testsuite name="main.source.CircleTest" incomplete="true">
    <error>java.lang.Error: Unresolved compilation problem: 
&#13;
	at main.source.CircleTest.setUpClass(CircleTest.java:17)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
java.lang.Error: Unresolved compilation problem: 
&#13;
	at main.source.CircleTest.tearDownClass(CircleTest.java:21)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
    <testcase name="testGetPerimeterNegativeInfinityRadius" classname="main.source.CircleTest" incomplete="true"/>
    <testcase name="testGetAreaNegativeValueRadius" classname="main.source.CircleTest" incomplete="true"/>
    <testcase name="testGetAreaPositiveInfinityRadius" classname="main.source.CircleTest" incomplete="true"/>
    <testcase name="testGetPerimeterNaNRadius" classname="main.source.CircleTest" incomplete="true"/>
    <testcase name="testGetPerimeterNegativeValueRadius" classname="main.source.CircleTest" incomplete="true"/>
    <testcase name="testGetAreaNaNRadius" classname="main.source.CircleTest" incomplete="true"/>
    <testcase name="testGetAreaNegativeInfinityRadius" classname="main.source.CircleTest" incomplete="true"/>
    <testcase name="testGetArea" classname="main.source.CircleTest" incomplete="true"/>
    <testcase name="testGetPerimeter" classname="main.source.CircleTest" incomplete="true"/>
    <testcase name="testGetPerimeterPositiveInfinityRadius" classname="main.source.CircleTest" incomplete="true"/>
    <testcase name="testInitialValues" classname="main.source.CircleTest" incomplete="true"/>
  </testsuite>
</testrun>
