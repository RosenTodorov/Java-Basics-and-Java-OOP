
public abstract class Product implements Buyable  {
	protected String name;
	protected double price;
	protected int quantity;
	protected AgeRestriction ageRestrictionLevel;
	
	public Product(String name, double price, int quantity,
			AgeRestriction ageRestrictionLevel) {
		super();
		this.name = name;
		this.price = price;
		this.quantity = quantity;
		this.ageRestrictionLevel = ageRestrictionLevel;
	}
	
	public String getName() {
		return name;
	}

	public void setName(String name) {
		if (name.isEmpty() || name == null) {
			throw new IllegalArgumentException("product name cannot be empty or null");
		}
		this.name = name;
	}

	public double getPrice() {
		return price;
	}

	public void setPrice(double price) {
		if (price < 0) {
			throw new IllegalArgumentException("price cannot be negative");
		}
		this.price = price;
	}

	public int getQuantity() {
		return quantity;
	}

	public void setQuantity(int quantity) {
		if (quantity < 0) {
			throw new IllegalArgumentException("quantity cannot be negative");
		}
		this.quantity = quantity;
	}

	public AgeRestriction getAgeRestrictionLevel() {
		return ageRestrictionLevel;
	}

	public void setAgeRestrictionLevel(AgeRestriction ageRestrictionLevel) {
		this.ageRestrictionLevel = ageRestrictionLevel;
	}
	
	public String toString() {
		return "Type: " + this.getClass() +
				"Name: " + this.getName() +
				"Price: " + this.getPrice() +
				"Quantity" + this.getQuantity() +
				"Age restriction: " + this.getAgeRestrictionLevel(); 
	}
}
